agebs_hex
# negocios <- read_csv("datos/denue.csv")
# clientes <- read_csv("datos/clientes.csv")
# ratings <- read_csv("datos/ratings.csv")
agebs <- agebs %>%
mutate(poblacion = poblacn,
escolaridad = esclrdd)
agebs_hex <- agebs
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
################ Agrupados Dashboard ####
library(tidyverse)
library(readr)
library(stringi)
library(readxl)
library(gtools)
### PATHS INPUTS ####
path_local <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Memory_ouputs/MP5_HIST_CTES/'
path_read_bt <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Memory_ouputs/MP3_BTRADER/'
path_segkpi <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Memory_ouputs/MP1_SEG_KPIS/'
path_activos <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Logic_outputs/LP1_SEG_KPIS/'
path_muv <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Memory_ouputs/MP4_MUV/'
### PATHS OUTPUTS ####
path_bt_mod <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Memory_ouputs/LP_BTRADER_MOD/'
path_ins_dash_h1 <- '//150.105.64.71/b_pla001/TCRD01/eCommerce/RDS/Equity/Btrader/DashBtrader/Logic_outputs/LP5_TABLAINSUMO_H1/'
### CREACION DE ARCHIVOS HISTORICOS ####
bt_files <- list.files(path_read_bt)
bt_files <-
tibble(
archivo = bt_files
)
bt_files <-
bt_files%>%
filter(str_detect(archivo,"BTRADER"),
(str_detect(archivo,"TXT") | str_detect(archivo,"txt"))
)
bt_files <-
bt_files%>%
mutate(ANIO = 2000 + as.numeric(str_extract(archivo,"[0-9]{2}")),
MES = as.numeric(str_extract(str_sub(archivo,10,-1),"[0-9]{2}")),
FECHA = make_date(ANIO, MES,1)
) %>%
filter(
str_detect(archivo,"BTRADER")
)
bt_files <- bt_files %>%
filter(ANIO >= 2025)
bt_files <- bt_files %>%
filter(FECHA == max(FECHA))
#### Insumos ####
seg_files <- list.files(path_segkpi)
seg_files <- tibble(
archivo = seg_files
)
seg_files <- seg_files%>%
filter(str_detect(archivo,"SEG_KPIS"),
(str_detect(archivo,"CSV") | str_detect(archivo,"csv"))
)
seg_files <-
seg_files %>%
mutate(ANIO = as.numeric(str_extract(archivo,"[0-9]{4}")),
MES = as.numeric(str_extract(str_sub(archivo,15,-1),"[0-9]{2}")),
FECHA = make_date(ANIO, MES,1)
) %>%
filter(
str_detect(archivo,"SEG_KPIS")
)
seg_files <- seg_files %>%
filter(ANIO >= 2025)
cat_clien <- readxl::read_excel(paste0(path_local,'catalogo_ctes_btrader.xlsx'), sheet = 1)
cat_estrato <- readxl::read_excel(paste0(path_local,'catalogo_ctes_btrader.xlsx'), sheet = 2)
activos_bt <- read.csv(paste0(path_activos, 'seg_kpis_x_estrato.csv'))
muv_files <- list.files(path_muv)
muv_files <- tibble(
archivo = muv_files
)
muv_files <- muv_files %>%
filter(str_detect(archivo,"EQCASH"),
(str_detect(archivo,"TXT") | str_detect(archivo,"txt"))
)
muv_files <-
muv_files %>%
mutate(ANIO = 2000 + as.numeric(str_extract(archivo,"[0-9]{2}")),
MES = as.numeric(str_extract(str_sub(archivo,18,-1),"[0-9]{2}")),
FECHA = make_date(ANIO, MES,1)
) %>%
filter(
str_detect(archivo,"EQCASH")
)
muv_files <- muv_files %>%
filter(ANIO >= 2025)
#### Procesamiento ####
nomcol <- c('CUENTA',
'CPA_VTA',
'FECHA_OPERACION',
'DESCRIPCION_OPERA',
'NUM_REFERENCIA',
'NUM_ORDEN',
'NUM_HECHO',
'TIPO_ORDEN',
'EMISORA',
'SERIE',
'CUPON',
'TITULOS_SOLICITADOS',
'TITULOS_ASIGNADOS',
'PRECIO_OPERA',
'IMPORTE_OPERA',
'COMISION_OPERA',
'PORC_COMISION',
'MERCADO',
'FECHA_LIQUIDA',
'FECHA_REGISTRO',
'IUSUARIO',
'SUBCANAL',
'CLIENTE',
'TIPO_VALOR',
'ESTRATO',
'FEC_ALTA',
'FEC_BAJA',
'BANCA',
'DIVISION',
'BANQUERO'
)
### GeneraciÃ³n de tablas dashboard
bt_dash <- list.files(path_bt_mod)
bt_dash <- tibble(
archivo = bt_dash
)
bt_dash <- bt_dash%>%
filter(str_detect(archivo,"Btrader"),
(str_detect(archivo,"CSV") | str_detect(archivo,"csv"))
)
bt_dash <-
bt_dash%>%
mutate(ANIO = 2000 + as.numeric(str_extract(archivo,"[0-9]{2}")),
MES = as.numeric(str_extract(str_sub(archivo,11,-1),"[0-9]{2}")),
FECHA = make_date(ANIO, MES,1)
) %>%
filter(
str_detect(archivo,"Btrader")
)
bt_dash <- bt_dash %>%
filter(ANIO >= 2025)
btrader <- read_excel(paste0(path_bt_mod,'Btrader_2024.xlsx'), sheet = 1)
names(btrader) <- nomcol
btrader <- btrader %>%
mutate(FECHA_OPERACION = ymd(as.Date(btrader$FECHA_OPERACION)),
FECHA_LIQUIDA = ymd(as.Date(btrader$FECHA_LIQUIDA)),
FEC_ALTA = ymd(as.Date(btrader$FEC_ALTA)),
FEC_BAJA = ymd(as.Date(btrader$FEC_BAJA))
)
btrader_back <- btrader
for (j in 1:dim(bt_dash)[1]) {
print(j)
b <- bt_dash[j,1]
btj <- read.csv(paste0(path_bt_mod,b))
btj <- btj %>%
mutate(CUENTA = str_pad(str_trim(btj$CUENTA), width = 7, side = 'left', pad = 0))
btj$FECHA_OPERACION <- btj$FECHA_OPERACION %>% as.Date()
btj$FECHA_OPERACION <- ymd(btj$FECHA_OPERACION)
btj$FECHA_LIQUIDA <- btj$FECHA_LIQUIDA %>% as.Date()
btj$FECHA_LIQUIDA <- ymd(btj$FECHA_LIQUIDA)
btj$FEC_ALTA <- btj$FEC_ALTA %>% as.Date()
btj$FEC_ALTA <- ymd(btj$FEC_ALTA)
btj$FEC_BAJA <- btj$FEC_BAJA %>% as.Date()
btj$FEC_BAJA <- ymd(btj$FEC_BAJA)
btrader <- union_all(btrader,btj)
}
btrader %>%
group_by(year(FECHA_OPERACION),month(FECHA_OPERACION)) %>%
count()
canales_dash <- c('BCOM', 'BTRADER', 'GLOMO')
btrader <- btrader %>%
mutate(CTE_VALIDO = case_when(IUSUARIO == 'PPORC' ~ 0,
.default = 1),
IX_CAPITALES = case_when(MERCADO == 'CAPITALES' ~ 1,
.default = 0),
IX_WARRANTS = if_else(grepl("^(BC|DC)[0-9]{3}$", SERIE)==TRUE,1,0),
SEGMENTO = case_when(ESTRATO %in% c('BR1', 'BR2') ~ 'COMERCIAL',
ESTRATO %in% c('EMP', 'PF1', 'PF2', 'PF3', 'UHN') ~ 'BPP',
.default = 'OTRO'),
SUBCANAL = case_when(SUBCANAL == 1 ~ 'BCOM',
SUBCANAL == 'B' ~ 'BTRADER',
SUBCANAL == 'G' ~ 'GLOMO',
SUBCANAL == 'O' ~ 'VOZ',
.default = 'OTRO'),
TIPO_MERCADO = ifelse(str_detect(btrader$DESCRIPCION_OPERA,"SIC"),
"SIC",
"MERCADO NACIONAL"),
DIVISION = case_when(str_detect(DIVISION,"DIVISION")~str_trim(substring(DIVISION,10)),
DIVISION == "NA" ~ NA,
.default = DIVISION))
#btrader <- btrader %>%
#  mutate(IX_CAPITALES = case_when(MERCADO == 'CAPITALES' ~ 1,
#                                .default = 0))
#btrader <- btrader %>%
#  mutate(IX_WARRANTS = if_else(grepl("^(BC|DC)[0-9]{3}$", SERIE)==TRUE,1,0))
#btrader <- btrader %>%
#  mutate(SEGMENTO = case_when(ESTRATO %in% c('BR1', 'BR2') ~ 'COMERCIAL',
#                               ESTRATO %in% c('EMP', 'PF1', 'PF2', 'PF3', 'UHN') ~ 'BPP',
#                               .default = 'OTRO')
#         )
#btrader <- btrader %>%
#  mutate(SUBCANAL = case_when(SUBCANAL == 1 ~ 'BCOM',
#                              SUBCANAL == 'B' ~ 'BTRADER',
#                              SUBCANAL == 'G' ~ 'GLOMO',
#                              SUBCANAL == 'O' ~ 'VOZ',
#                              .default = 'OTRO')
#  )
#canales_dash <- c('BCOM', 'BTRADER', 'GLOMO')
#btrader <- btrader %>%
#  mutate(TIPO_MERCADO = ifelse(str_detect(btrader$DESCRIPCION_OPERA,"SIC"),
#                               "SIC",
#                               "MERCADO NACIONAL"))
#btrader <- btrader %>%
#  mutate(DIVISION = case_when(str_detect(DIVISION,"DIVISION")~str_trim(substring(DIVISION,10)),
#                                DIVISION == "NA" ~ NA,
#                                .default = DIVISION)
#         )
#tabla_1 <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL', 'BPP'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION),
#           NU_MES = month(FECHA_OPERACION),
#           NB_MES = month(FECHA_OPERACION, label = TRUE, abbr = FALSE),
#           FH_OPERA = floor_date(ymd(FECHA_OPERACION), 'month'),
#           SEGMENTO,
#           SUBCANAL) %>%
#  summarise(VOLUMEN = sum(IMPORTE_OPERA),
#            INGRESOS = sum(COMISION_OPERA)
#            )
#
#clientes_anio <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL', 'BPP'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION)) %>%
#  summarise(CLIENTES_Y = n_distinct(CLIENTE))
#
#clientes_anio_comercial <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION)) %>%
#  summarise(CLIENTES_Y_COMERCIAL = n_distinct(CLIENTE))
#
#clientes_anio_bpp <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('BPP'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION)) %>%
#  summarise(CLIENTES_Y_BPP = n_distinct(CLIENTE))
#
#clientes_anio_mes <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL', 'BPP'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION), NU_MES = month(FECHA_OPERACION)) %>%
#  summarise(CLIENTES_M = n_distinct(CLIENTE))
#
#clientes_anio_mes_comercial <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION), NU_MES = month(FECHA_OPERACION)) %>%
#  summarise(CLIENTES_M_COMERCIAL = n_distinct(CLIENTE))
#
#clientes_anio_mes_bpp <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('BPP'),
#         SUBCANAL %in% canales_dash,
#         !is.na(TIPO_MERCADO)) %>%
#  group_by(ANIO = year(FECHA_OPERACION), NU_MES = month(FECHA_OPERACION)) %>%
#  summarise(CLIENTES_M_BPP = n_distinct(CLIENTE))
#
#
#tabla_1 <- tabla_1 %>%
#  left_join(.,clientes_anio_mes, by = c("ANIO", "NU_MES"))
#
#tabla_1 <- tabla_1 %>%
#  left_join(.,clientes_anio_mes_comercial, by = c("ANIO", "NU_MES"))
#
#tabla_1 <- tabla_1 %>%
#  left_join(.,clientes_anio_mes_bpp, by = c("ANIO", "NU_MES"))
#
#tabla_1 <- tabla_1 %>%
#  left_join(.,clientes_anio, by = c("ANIO"))
#
#tabla_1 <- tabla_1 %>%
#  left_join(.,clientes_anio_comercial, by = c("ANIO"))
#
#tabla_1 <- tabla_1 %>%
#  left_join(.,clientes_anio_bpp, by = c("ANIO"))
#
#write.csv(tabla_1,
#          paste0(path_ins_dash_h1,
#                 'tabla_1_',
#                 as.character(str_sub(year(today()),3,-1)),
#                 as.character(str_pad(str_trim(month(today())), width = 2, side = 'left', pad = 0)),
#                 as.character(str_pad(str_trim(day(today())), width = 2, side = 'left', pad = 0)),
#                 '.csv'
#                 ),
#          row.names = FALSE)
#tabla_div <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL', 'BPP'),
#         SUBCANAL %in% canales_dash) %>%
#  group_by(ANIO = year(FECHA_OPERACION),
#           NU_MES = month(FECHA_OPERACION),
#           NB_MES = month(FECHA_OPERACION, label = TRUE, abbr = FALSE),
#           FH_OPERA = floor_date(ymd(FECHA_OPERACION), 'month'),
#           DIVISION,
#           BANQUERO) %>%
#  summarise(VOLUMEN = sum(IMPORTE_OPERA),
#            INGRESOS = sum(COMISION_OPERA))
#
#write.csv(tabla_div,
#          paste0(path_ins_dash_h1,
#                 'tabla_div_',
#                 as.character(str_sub(year(today()),3,-1)),
#                 as.character(str_pad(str_trim(month(today())), width = 2, side = 'left', pad = 0)),
#                 as.character(str_pad(str_trim(day(today())), width = 2, side = 'left', pad = 0)),
#                 '.csv'
#                 ),
#          row.names = FALSE)
#
#
#tabla_emi <- btrader %>%
#  filter(IX_WARRANTS == 0,
#         IX_CAPITALES == 1,
#         CTE_VALIDO == 1,
#         SEGMENTO %in% c('COMERCIAL', 'BPP'),
#         SUBCANAL %in% canales_dash) %>%
#  group_by(ANIO = year(FECHA_OPERACION),
#           NU_MES = month(FECHA_OPERACION),
#           NB_MES = month(FECHA_OPERACION, label = TRUE, abbr = FALSE),
#           FH_OPERA = floor_date(ymd(FECHA_OPERACION), 'month'),
#           EMISORA,
#           TIPO_MERCADO) %>%
#  summarise(VOLUMEN = sum(IMPORTE_OPERA),
#            INGRESOS = sum(COMISION_OPERA))
#
#write.csv(tabla_emi,
#          paste0(path_ins_dash_h1,
#                 'tabla_emi_',
#                 as.character(str_sub(year(today()),3,-1)),
#                 as.character(str_pad(str_trim(month(today())), width = 2, side = 'left', pad = 0)),
#                 as.character(str_pad(str_trim(day(today())), width = 2, side = 'left', pad = 0)),
#                 '.csv'
#                 ),
#          row.names = FALSE)
#
btrader %>%
group_by(year(FECHA_OPERACION), month(FECHA_OPERACION)) %>%
count()
btrader_filtrado <- btrader %>%
filter(IX_WARRANTS == 0,
IX_CAPITALES == 1,
CTE_VALIDO == 1,
SEGMENTO %in% c('COMERCIAL', 'BPP'),
SUBCANAL %in% canales_dash) %>%
mutate(ANIO = year(FECHA_OPERACION),
MES = month(FECHA_OPERACION),
DIA = day(FECHA_OPERACION),
NB_MES = lubridate::month(FECHA_OPERACION, label = TRUE, abbr = FALSE),
BANQUERO = str_replace_all(BANQUERO,'[^a-zA-Z0-9 Ã±Ã]','Ã'),
EMISORA = str_replace_all(EMISORA,'[^a-zA-Z0-9 Ã±Ã]','Ã')) %>%
select(ANIO,
MES,
DIA,
NB_MES,
CUENTA,
CPA_VTA,
FECHA_OPERACION,
EMISORA,
IMPORTE_OPERA,
COMISION_OPERA,
SUBCANAL,
CLIENTE,
BANCA,
DIVISION,
BANQUERO,
SEGMENTO,
TIPO_MERCADO)
activos_bt <-
activos_bt %>%
mutate(ANIO = year_extraccion,
SEGMENTO = case_when(tag_estrato == 'BPyP' ~ 'BPP',
tag_estrato == 'Comercial' ~ 'COMERCIAL',
.default = 'OTRO')
) %>%
select(ANIO,SEGMENTO,n_actives) %>%
pivot_wider(names_from = SEGMENTO, values_from = n_actives, names_prefix = "CTES_") %>%
mutate(CTES_TOTAL = CTES_BPP + CTES_COMERCIAL)
btrader_filtrado <- btrader_filtrado %>%
left_join(.,activos_bt, by = "ANIO")
# AGREGA INGRESOS HISTORICOS ----
ing_hist <- data.frame(ANIO = c(2023,2022,2021,2020,2019,2018),
MES = c(1,1,1,1,1,1),
DIA = c(1,1,1,1,1,1),
IMPORTE_OPERA = c(0,0,0,0,0,0),
COMISION_OPERA = c(18858000, 29708000, 24498232, 17752187, 5396736, 5480175),
CTES_BPP = c(0,0,0,0,0,0),
CTES_COMERCIAL = c(0,0,0,0,0,0),
CTES_TOTAL = c(0,0,0,0,0,0)
)
btrader_filtrado_f <- smartbind(btrader_filtrado, ing_hist)
btrader_filtrado_f %>% glimpse()
btrader_filtrado_f %>% as.data.frame()
btrader_filtrado_f <- btrader_filtrado_f %>% as.data.frame()
btrader_filtrado_f %>% glimpse()
df1 <- data.frame(A = 1:10, B = LETTERS[1:10], C = rnorm(10))
df2 <- data.frame(A = 11:20, D = rnorm(10), E = letters[1:10])
rbind(df1, df2)
smartbind(df1, df2)
smartbind(df1, df2, fill = '')
df1
df2
smartbind(df1, df2, fill = NA)
smartbind(df1, df2, fill = 0)
smartbind(df1, df2, fill = '')
ing_hist <- data.frame(ANIO = c(2023,2022,2021,2020,2019,2018),
MES = c(1,1,1,1,1,1),
DIA = c(1,1,1,1,1,1),
NB_MES = c('','','','','',''),
CUENTA	= c('','','','','',''),
CPA_VTA	= c('','','','','',''),
FECHA_OPERACION	= c('','','','','','')	,
EMISORA = c('','','','','','')	,
IMPORTE_OPERA = c(0,0,0,0,0,0),
COMISION_OPERA = c(18858000, 29708000, 24498232, 17752187, 5396736, 5480175),
SUBCANAL	= c('','','','','','') ,
CLIENTE	= c('','','','','','')	,
BANCA	= c('','','','','','')	,
DIVISION	= c('','','','','',''),
BANQUERO	= c('','','','','',''),
SEGMENTO	= c('','','','','',''),
TIPO_MERCADO = c('','','','','','')	,
CTES_BPP = c(0,0,0,0,0,0),
CTES_COMERCIAL = c(0,0,0,0,0,0),
CTES_TOTAL = c(0,0,0,0,0,0)
)
btrader_filtrado_f <- rbind(btrader_filtrado, ing_hist)
btrader_filtrado_f %>% glimpse()
btrader_filtrado_f %>% tail()
write.csv(btrader_filtrado_f,
paste0(path_ins_dash_h1,
'tabla_completa_',
as.character(str_sub(year(today()),3,-1)),
as.character(str_pad(str_trim(month(today())), width = 2, side = 'left', pad = 0)),
as.character(str_pad(str_trim(day(today())), width = 2, side = 'left', pad = 0)),
'.csv'
),
row.names = FALSE
, fileEncoding = 'UTF-8'
)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list.files(all.files = TRUE)
list.files(all.files = TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
Sys.getenv("GOOGLE_MAPS_TOKEN")
Sys.getenv()
runApp()
